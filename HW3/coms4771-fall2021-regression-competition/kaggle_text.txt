Description
==================

Welcome to COMS 4771 large-scale regression task. Your goal for this assignment is to develop a good quality regressor for the given dataset.

The given dataset comes from musical songs domain. It consists of about 1/2 Million songs from 20th and 21st century. The task is to predict the year the song was released given the musical content of the song.

To ease the preprocessing burden, each song (observation) has already been vectorized into 90 high quality timbre based features.

You can use any resource/code/package/toolbox that is publicly available to develop your regressor. Your primary goal for this assignment is to develop a good quality song-year predictor. (This of course will be only possible if you employ good Machine Learning practices).


Evaluation
===============

The evaluation metric for song-year prediction task is the "mean absolute error" of the predicted year compared to the correct release year on test samples. Note that there are 51,630 test examples.

Submission Format
The submission file will be a CSV file with two columns: dataid and prediction. dataid is a unique identifier (between 1 and 51630) for each song, and prediction is the estimated released year for that song.

For example, if you predict songs 1 through 5 as released in the year 2000 and rest of the songs 6 through 51630 as released in the year 1900 the submission file must look as follows

dataid,prediction
1,2000
2,2000
3,2000
4,2000
5,2000
6,1900
7,1900
8,1900
9,1900
10,1900
11,1900
...
51629,1900
51630,1900


Data Description
======================

The data file contains three variables: trainx, trainy, testx.

- trainx is a 463715×90 matrix of training data, where each row is a 90-dimensional feature representation of a song.
- trainy is a 463715×1 vector of labels associated with each training data. Each row is the release year of the corresponding song in trainx.
- testx is a 51630×90 matrix of test data.
Special note for those who are not using Matlab: Python users can use scipy to read in the mat file, R users can use R.matlab package to read in the mat file.




